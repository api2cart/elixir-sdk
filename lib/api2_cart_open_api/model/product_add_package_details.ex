# NOTE: This file is auto generated by OpenAPI Generator 7.11.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule API2CartOpenAPI.Model.ProductAddPackageDetails do
  @moduledoc """
  If the seller is subscribed to \"Business Policies\", use the seller_profiles instead of the shipping_details, payment_methods and return_accepted params.<hr><div style=\"font-style:normal\">Param structure:<div style=\"margin-left: 2%;\"><code style=\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\">package_details[<b>measure_unit</b>] = string</br> Allowed measure_unit values: [English or Metric] </br> Default: Metric</br>package_details[<b>weigh_unit</b>] = string</br> Allowed weigh_unit values: [kg, g, lbs, oz]</br>package_details[<b>package_depth</b>] = decimal</br>package_details[<b>package_length</b>] = decimal</br>package_details[<b>package_width</b>] = decimal</br>package_details[<b>weight_major</b>] = decimal</br>package_details[<b>weight_minor</b>] = decimal</br>package_details[<b>shipping_package</b>] = string</br> See cart.info method, param `eBay_shipping_package_details`</code></div></div>
  """

  @derive Jason.Encoder
  defstruct [
    :measure_unit,
    :weigh_unit,
    :package_depth,
    :package_length,
    :package_width,
    :weight_major,
    :weight_minor,
    :shipping_package
  ]

  @type t :: %__MODULE__{
    :measure_unit => String.t | nil,
    :weigh_unit => String.t | nil,
    :package_depth => float() | nil,
    :package_length => float() | nil,
    :package_width => float() | nil,
    :weight_major => float() | nil,
    :weight_minor => float() | nil,
    :shipping_package => String.t | nil
  }

  def decode(value) do
    value
  end
end

