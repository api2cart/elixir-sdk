# NOTE: This file is auto generated by OpenAPI Generator 7.11.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule API2CartOpenAPI.Model.CustomerAddress do
  @moduledoc """
  
  """

  @derive Jason.Encoder
  defstruct [
    :id,
    :type,
    :first_name,
    :last_name,
    :postcode,
    :address1,
    :address2,
    :phone,
    :phone_mobile,
    :city,
    :country,
    :state,
    :company,
    :fax,
    :website,
    :gender,
    :region,
    :default,
    :tax_id,
    :identification_number,
    :alias,
    :additional_fields,
    :custom_fields
  ]

  @type t :: %__MODULE__{
    :id => String.t | nil,
    :type => String.t | nil,
    :first_name => String.t | nil,
    :last_name => String.t | nil,
    :postcode => String.t | nil,
    :address1 => String.t | nil,
    :address2 => String.t | nil,
    :phone => String.t | nil,
    :phone_mobile => String.t | nil,
    :city => String.t | nil,
    :country => API2CartOpenAPI.Model.Country.t | nil,
    :state => API2CartOpenAPI.Model.State.t | nil,
    :company => String.t | nil,
    :fax => String.t | nil,
    :website => String.t | nil,
    :gender => String.t | nil,
    :region => String.t | nil,
    :default => boolean() | nil,
    :tax_id => String.t | nil,
    :identification_number => String.t | nil,
    :alias => String.t | nil,
    :additional_fields => map() | nil,
    :custom_fields => map() | nil
  }

  alias API2CartOpenAPI.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:country, :struct, API2CartOpenAPI.Model.Country)
     |> Deserializer.deserialize(:state, :struct, API2CartOpenAPI.Model.State)
  end
end

